name: api-deployment

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build-and-verify:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Unit tests
        run: |
          COVERAGE=$(coverage run --source=. -m unittest discover && coverage report | grep TOTAL | awk 'NF>1{print $NF}')
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
      - name: Create Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: 2b7862c80c14d562c8659e1283543190
          filename: api-deployment.json
          label: Code coverage
          message: ${{ env.COVERAGE }}
          color: green

  deploy-infrastructure:
    needs: build-and-verify
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false
      - name: Format Terraform
        working-directory: ./iac
        run: terraform fmt -check=true -write=false -diff -recursive
      - name: Initialize Terraform
        working-directory: ./iac
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Plan Terraform
        working-directory: ./iac
        run: terraform plan -out -detailed-exitcode
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Apply Terraform
        working-directory: ./iac
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  application-deployment:
    needs: deploy-infrastructure
    uses: DennisJensen95/api-deployment-aws/.github/workflows/_deployment.yml@main
